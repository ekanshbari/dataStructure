QUICK SORT
#include <iostream>
 
using namespace std;
 
void quick_sort(int*,int,int);
int partition(int *,int,int);
 
int main()
{
    int a[50],n,i;
    cout<<"How many elements?";
    cin>>n;
    cout<<"\nEnter array elements:";
    
    for(i=0;i<n;i++)
        cin>>a[i];
        
    quick_sort(a,0,n-1);
    cout<<"\nArray after sorting:";
    
    for(i=0;i<n;i++)
        cout<<a[i]<<" ";
    
    return 0;        
}
 
void quick_sort(int a[],int l,int u)
{
    int j;
    if(l<u)
    {
        j=partition(a,l,u);
        quick_sort(a,l,j-1);
        quick_sort(a,j+1,u);
    }
}
 
int partition(int a[],int l,int u)
{
    int left = l;
    int right =u;
    int loc =l;
    loop1: while (a[loc]<=a[right]&& loc!=right)
    {
    	right--;
	}
	if(loc==right)
	{
		return loc;
		
	}
else
{
	int temp;
	temp=a[loc];
	a[loc]=a[right];
	a[right]=temp;
	loc = right;
	goto loop2;
}
loop2: while (a[loc]>=a[left]&& loc!=left)
    {
    	left++;
	}
	if(loc==left)
	{
		return loc;
		
	}
else
{
	int temp1;
	temp1=a[loc];
	a[loc]=a[left];
	a[left]=temp1;
	loc = left;
	goto loop1;
}
}
.
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx



Merging Sorted-array

void display(intarr[], int n);

int main()
{
int *a, *b, *c, aSize, bSize, cSize;
intja, kb, lc;
ja = kb = lc = 0;

cout<<"Enter size of array a[]: ";
cin>>aSize;
    a = new int[aSize];

cout<<"Enter size of array b[]: ";
cin>>bSize;
    b = new int[bSize];

cout<<"Enter elements for array a[]: " <<endl;
for(int i=0; i<aSize; i++)
    {
cout<<"Enter data value " <<i+1 <<": ";
cin>>a[i];        
    }

cout<<"Enter elements for array b[]: " <<endl;
for(int i=0; i<bSize; i++)
    {
cout<<"Enter data value " <<i+1 <<": ";
cin>>b[i];        
    }

display(a, aSize);
cout<<endl;
display(b, bSize);

    //Merging
cSize = aSize + bSize;
    c = new int[cSize];
while( (ja<aSize) && (kb <bSize) )
    {
if(a[ja] < b[kb])
           {
c[lc] = a[ja];
ja++;  lc++;         
           }  
else
           {
c[lc] = b[kb];
kb++;  lc++; 
           }    
    }
if(ja<aSize)
    {
while(ja<aSize)  
         {
c[lc] = a[ja];
ja++;  lc++;     
         }    
    }
else
    {
while(kb <bSize)  
         {
c[lc] = b[kb];
kb++;  lc++;     
         }    
    }
display(c,cSize);

getch();
return 0;    
}

void display(intarr[], int n)
{
cout<<"\n Values in array are: ";
for(int i=0;i<n; i++)
     {
cout<<arr[i] <<"   ";        
     }     
}

